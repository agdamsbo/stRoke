[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andreas Gammelgaard Damsbo. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Damsbo (2022). stRoke: Clinical stroke research toolbox. https://agdamsbo.github.io/stRoke/, https://github.com/agdamsbo/stRoke, https://agdamsbo.github.io/neuRo-group/.","code":"@Manual{,   title = {stRoke: Clinical stroke research toolbox},   author = {Andreas Gammelgaard Damsbo},   year = {2022},   note = {https://agdamsbo.github.io/stRoke/, https://github.com/agdamsbo/stRoke, https://agdamsbo.github.io/neuRo-group/}, }"},{"path":"/index.html","id":"stroke-package-","dir":"","previous_headings":"","what":"Clinical stroke research toolbox","title":"Clinical stroke research toolbox","text":"package contains tools used (Andreas) research work ENIGMA project. Please use package grab bits functions. Mind licensing.","code":""},{"path":"/index.html","id":"a-few-notes","dir":"","previous_headings":"","what":"A few notes","title":"Clinical stroke research toolbox","text":"function generic_stroke()can used data(talos) custom data set illustrate classic analysis mRS outcome stroke trials.","code":""},{"path":"/index.html","id":"source","dir":"","previous_headings":"","what":"Source","title":"Clinical stroke research toolbox","text":"package shared GitHub, welcome contribute opening issue pull request.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Clinical stroke research toolbox","text":"package can installed GitHub:","code":"remotes::install_github(\"agdamsbo/stRoke\")"},{"path":"/reference/age_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating age from date of birth — age_calc","title":"Calculating age from date of birth — age_calc","text":"age calculations. Vectorised.","code":""},{"path":"/reference/age_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating age from date of birth — age_calc","text":"","code":"age_calc(dob, enddate = Sys.Date(), units = \"years\", precise = TRUE)"},{"path":"/reference/age_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating age from date of birth — age_calc","text":"dob Date birth. Data format follows standard POSIX layout. Format yyyy-mm-dd. enddate Date calculate age . Format yyyy-mm-dd. units Default \"years\". Can changed \"days\". precise Default TRUE. Flag set whether include calculations spring years. matter using units = \"days\".","code":""},{"path":"/reference/age_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating age from date of birth — age_calc","text":"Vector age","code":""},{"path":"/reference/age_calc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating age from date of birth — age_calc","text":"","code":"# Kim Larsen (cpr is known from album)   dob<-as.Date(\"1945-10-23\")   date<-as.Date(\"2018-09-30\")   trunc(age_calc(dob,date)) #> [1] 72"},{"path":"/reference/ci_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval plot with point estimate — ci_plot","title":"Confidence interval plot with point estimate — ci_plot","text":"Horizontal forest plot point estimate confidence intervals. Includes dichotomous olr, depending number levels \"x\". Title axis labels can added ggplot afterwards.","code":""},{"path":"/reference/ci_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval plot with point estimate — ci_plot","text":"","code":"ci_plot(ds, x, y, vars, dec = 3, lbls = NULL, title = NULL)"},{"path":"/reference/ci_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval plot with point estimate — ci_plot","text":"ds data set x text string main exposure variable y text string outcome variable vars variables multivariate analysis. dec Decimals labels lbls Labels variable names title Plot title. Can specified later.","code":""},{"path":"/reference/ci_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence interval plot with point estimate — ci_plot","text":"ggplot element","code":""},{"path":"/reference/ci_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence interval plot with point estimate — ci_plot","text":"","code":"data(talos) talos[,\"mrs_1\"]<-factor(talos[,\"mrs_1\"],ordered=TRUE) talos$bin <- factor(sample(1:2, size = nrow(talos), replace = TRUE)) ci_plot(ds = talos, x = \"rtreat\", y = \"mrs_1\", vars = c(\"hypertension\",\"diabetes\")) #> Waiting for profiling to be done..."},{"path":"/reference/cpr_check.html","id":null,"dir":"Reference","previous_headings":"","what":"CPR check — cpr_check","title":"CPR check — cpr_check","text":"Checking validity cpr number. Vectorised.","code":""},{"path":"/reference/cpr_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CPR check — cpr_check","text":"","code":"cpr_check(cpr)"},{"path":"/reference/cpr_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CPR check — cpr_check","text":"cpr cpr-numbers ddmmyy\"-.\"xxxx ddmmyyxxxx. Also mixed formatting. Vector data frame column.","code":""},{"path":"/reference/cpr_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CPR check — cpr_check","text":"Logical vector cpr validity","code":""},{"path":"/reference/cpr_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CPR check — cpr_check","text":"","code":"fsd<-c(\"2310450637\", \"010190-2000\", \"010115-4000\",\"300450-1030\",\"010150-4021\") cpr_check(\"2310450637\") #> OBS: according to new description, not all valid CPR numbers apply to this modulus 11 rule.  #>     Please refer to: https://cpr.dk/media/12066/personnummeret-i-cpr.pdf #> [1] TRUE cpr_check(fsd) #> OBS: according to new description, not all valid CPR numbers apply to this modulus 11 rule.  #>     Please refer to: https://cpr.dk/media/12066/personnummeret-i-cpr.pdf #> [1]  TRUE FALSE FALSE FALSE FALSE all(cpr_check(fsd)) #> OBS: according to new description, not all valid CPR numbers apply to this modulus 11 rule.  #>     Please refer to: https://cpr.dk/media/12066/personnummeret-i-cpr.pdf #> [1] FALSE"},{"path":"/reference/cpr_dob.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting date of birth from CPR — cpr_dob","title":"Extracting date of birth from CPR — cpr_dob","text":"easy calculation. handle cprs letters (interim cpr)","code":""},{"path":"/reference/cpr_dob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting date of birth from CPR — cpr_dob","text":"","code":"cpr_dob(cpr)"},{"path":"/reference/cpr_dob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting date of birth from CPR — cpr_dob","text":"cpr cpr-numbers ddmmyy\"-.\"xxxx ddmmyyxxxx. Also mixed formatting. Vector data frame column.","code":""},{"path":"/reference/cpr_dob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting date of birth from CPR — cpr_dob","text":"vector Date elements. Format yyyy-mm-dd","code":""},{"path":"/reference/cpr_dob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracting date of birth from CPR — cpr_dob","text":"","code":"cpr_dob(\"231045-0637\") #> [1] \"1945-10-23\" fsd<-c(\"2310450637\", \"010190-2000\", \"010115-4000\",\"300450-1030\",\"010150-4021\") cpr_dob(fsd) #> [1] \"1945-10-23\" \"1990-01-01\" \"2015-01-01\" \"1950-04-30\" \"1950-01-01\""},{"path":"/reference/cpr_female.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine female sex from CPR — cpr_female","title":"Determine female sex from CPR — cpr_female","text":"Just checking last number string equal .","code":""},{"path":"/reference/cpr_female.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine female sex from CPR — cpr_female","text":"","code":"cpr_female(cpr)"},{"path":"/reference/cpr_female.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine female sex from CPR — cpr_female","text":"cpr Vector. cpr-numbers ddmmyy\"-.\"xxxx ddmmyyxxxx. Also mixed formatting. Vector data frame column.","code":""},{"path":"/reference/cpr_female.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine female sex from CPR — cpr_female","text":"Logical vector","code":""},{"path":"/reference/cpr_female.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine female sex from CPR — cpr_female","text":"","code":"cpr_female(stRoke::cprs},{"path":"/reference/cprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame of 200 cpr numbers — cprs","title":"Data frame of 200 cpr numbers — cprs","text":"just repeated sample 8 synthesized cpr-numbers testing purposes.","code":""},{"path":"/reference/cprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame of 200 cpr numbers — cprs","text":"","code":"data(cprs)"},{"path":"/reference/cprs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame of 200 cpr numbers — cprs","text":"data frame 200 rows 1 variable: cpr Mixed format cpr-numbers, characters","code":""},{"path":"/reference/cprs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data frame of 200 cpr numbers — cprs","text":"https://da.wikipedia.org/wiki/231045-0637/","code":""},{"path":"/reference/generic_stroke.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic stroke study outcome — generic_stroke","title":"Generic stroke study outcome — generic_stroke","text":"Includes table 1, grotta bars ordinal logistic regression plot. Please just use function illustration purposes. dos: modify grottaBar include function.","code":""},{"path":"/reference/generic_stroke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic stroke study outcome — generic_stroke","text":"","code":"generic_stroke(df, group, score, strata = NULL, variables = NULL)"},{"path":"/reference/generic_stroke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic stroke study outcome — generic_stroke","text":"df Data set data frame group Variable group score Outcome measure variable strata Optional variable stratify variables String variable names include adjusted OLR-analysis","code":""},{"path":"/reference/generic_stroke.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic stroke study outcome — generic_stroke","text":"Returns list three elements","code":""},{"path":"/reference/generic_stroke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic stroke study outcome — generic_stroke","text":"","code":"generic_stroke(stRoke::talos, \"rtreat\", \"mrs_6\", variables = c(\"hypertension\",\"diabetes\",\"civil\")) #> Waiting for profiling to be done... #> $`Table 1` #> <div id=\"vnqczltxkw\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>html { #>   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; #> } #>  #> #vnqczltxkw .gt_table { #>   display: table; #>   border-collapse: collapse; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #vnqczltxkw .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #vnqczltxkw .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 0; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #vnqczltxkw .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #vnqczltxkw .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #vnqczltxkw .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #vnqczltxkw .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #vnqczltxkw .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #vnqczltxkw .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #vnqczltxkw .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #vnqczltxkw .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #vnqczltxkw .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #vnqczltxkw .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #vnqczltxkw .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vnqczltxkw .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #vnqczltxkw .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #vnqczltxkw .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vnqczltxkw .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #vnqczltxkw .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vnqczltxkw .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #vnqczltxkw .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-left: 4px; #>   padding-right: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vnqczltxkw .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #vnqczltxkw .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #vnqczltxkw .gt_left { #>   text-align: left; #> } #>  #> #vnqczltxkw .gt_center { #>   text-align: center; #> } #>  #> #vnqczltxkw .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #vnqczltxkw .gt_font_normal { #>   font-weight: normal; #> } #>  #> #vnqczltxkw .gt_font_bold { #>   font-weight: bold; #> } #>  #> #vnqczltxkw .gt_font_italic { #>   font-style: italic; #> } #>  #> #vnqczltxkw .gt_super { #>   font-size: 65%; #> } #>  #> #vnqczltxkw .gt_footnote_marks { #>   font-style: italic; #>   font-weight: normal; #>   font-size: 75%; #>   vertical-align: 0.4em; #> } #>  #> #vnqczltxkw .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #vnqczltxkw .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #vnqczltxkw .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #vnqczltxkw .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #vnqczltxkw .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #vnqczltxkw .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\"> #>    #>   <thead class=\"gt_col_headings\"> #>     <tr> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Overall&lt;/strong&gt;, N = 200&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>Overall<\/strong>, N = 200<sup class=\"gt_footnote_marks\">1<\/sup><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Active&lt;/strong&gt;, N = 79&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>Active<\/strong>, N = 79<sup class=\"gt_footnote_marks\">1<\/sup><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Placebo&lt;/strong&gt;, N = 121&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>Placebo<\/strong>, N = 121<sup class=\"gt_footnote_marks\">1<\/sup><\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">hypertension<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">101 (50%)<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_center\">38 (48%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_center\">63 (52%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">diabetes<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">23 (12%)<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_center\">9 (11%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_center\">14 (12%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">civil<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\"><\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_center\"><\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_center\"><\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    alone<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">59 (30%)<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_center\">22 (28%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_center\">37 (31%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    partner<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">141 (70%)<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_center\">57 (72%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_center\">84 (69%)<\/td><\/tr> #>   <\/tbody> #>    #>   <tfoot class=\"gt_footnotes\"> #>     <tr> #>       <td class=\"gt_footnote\" colspan=\"4\"><sup class=\"gt_footnote_marks\">1<\/sup> n (%)<\/td> #>     <\/tr> #>   <\/tfoot> #> <\/table> #> <\/div> #>  #> $`Figure 1`  #>  #> $`Figure 2`  #>"},{"path":"/reference/index_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multidimensional cognitive test scores — index_plot","title":"Plot multidimensional cognitive test scores — index_plot","text":"Plot index scores five dimensional cognitive testing. Includes option facet.","code":""},{"path":"/reference/index_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multidimensional cognitive test scores — index_plot","text":"","code":"index_plot(   ds,   id = \"id\",   sub_plot = \"_is\",   scores = c(\"_is\", \"_lo\", \"_up\", \"_per\"),   dom_names = c(\"immediate\", \"visuospatial\", \"verbal\", \"attention\", \"delayed\", \"total\"),   facet.by = NULL )"},{"path":"/reference/index_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multidimensional cognitive test scores — index_plot","text":"ds complete data frame id colname id column. Base colouring sub_plot main outcome scores variable plot scores variables subset plotting. follow standard naming (changed) dom_names domain names axis naming facet.variable base facet_grid ","code":""},{"path":"/reference/index_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot multidimensional cognitive test scores — index_plot","text":"ggplot element","code":""},{"path":"/reference/index_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot multidimensional cognitive test scores — index_plot","text":"","code":"index_plot(stRoke::score[score$event==\"A\",])"},{"path":"/reference/label_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for labels in gtsummary — label_select","title":"Helper function for labels in gtsummary — label_select","text":"Function select labels list label pairs (format: age~\"Age\"). Alternative use attributes, eg library(Hmisc).","code":""},{"path":"/reference/label_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for labels in gtsummary — label_select","text":"","code":"label_select(lst, vec)"},{"path":"/reference/label_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for labels in gtsummary — label_select","text":"lst List variables labels (format: age~\"Age\") vec Vector variables subset list","code":""},{"path":"/reference/label_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for labels in gtsummary — label_select","text":"List labels ordered like vec, formatted like lst","code":""},{"path":"/reference/label_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for labels in gtsummary — label_select","text":"","code":"vars<-c(\"hypertension\", \"diabetes\", \"mrs_1\") labels_all<-list(rtreat~\"Trial treatment\", civil~\"Cohabitation\", diabetes~\"Known diabetes\",  hypertension~\"Known hypertension\",  mrs_1~\"One month mRS\",  mrs_6~\"Six months mRS\",  '[Intercept]'~\"Intercept\") stRoke::talos[vars] |> gtsummary::tbl_summary(label = label_select(labels_all,vars)) #> <div id=\"kusfxlckhd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>html { #>   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; #> } #>  #> #kusfxlckhd .gt_table { #>   display: table; #>   border-collapse: collapse; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #kusfxlckhd .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #kusfxlckhd .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 0; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #kusfxlckhd .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #kusfxlckhd .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #kusfxlckhd .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #kusfxlckhd .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #kusfxlckhd .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #kusfxlckhd .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #kusfxlckhd .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #kusfxlckhd .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #kusfxlckhd .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #kusfxlckhd .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #kusfxlckhd .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kusfxlckhd .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #kusfxlckhd .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #kusfxlckhd .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kusfxlckhd .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #kusfxlckhd .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kusfxlckhd .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #kusfxlckhd .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-left: 4px; #>   padding-right: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kusfxlckhd .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #kusfxlckhd .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kusfxlckhd .gt_left { #>   text-align: left; #> } #>  #> #kusfxlckhd .gt_center { #>   text-align: center; #> } #>  #> #kusfxlckhd .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #kusfxlckhd .gt_font_normal { #>   font-weight: normal; #> } #>  #> #kusfxlckhd .gt_font_bold { #>   font-weight: bold; #> } #>  #> #kusfxlckhd .gt_font_italic { #>   font-style: italic; #> } #>  #> #kusfxlckhd .gt_super { #>   font-size: 65%; #> } #>  #> #kusfxlckhd .gt_footnote_marks { #>   font-style: italic; #>   font-weight: normal; #>   font-size: 75%; #>   vertical-align: 0.4em; #> } #>  #> #kusfxlckhd .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #kusfxlckhd .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #kusfxlckhd .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #kusfxlckhd .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #kusfxlckhd .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #kusfxlckhd .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\"> #>    #>   <thead class=\"gt_col_headings\"> #>     <tr> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 200&lt;/strong&gt;&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>N = 200<\/strong><sup class=\"gt_footnote_marks\">1<\/sup><\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">Known hypertension<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">101 (50%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">Known diabetes<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">23 (12%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">One month mRS<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\"><\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    0<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">31 (16%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    1<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">74 (37%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    2<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">64 (32%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    3<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">16 (8.0%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    4<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">10 (5.0%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    5<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">1 (0.5%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    6<\/td> #> <td headers=\"stat_0\" class=\"gt_row gt_center\">4 (2.0%)<\/td><\/tr> #>   <\/tbody> #>    #>   <tfoot class=\"gt_footnotes\"> #>     <tr> #>       <td class=\"gt_footnote\" colspan=\"2\"><sup class=\"gt_footnote_marks\">1<\/sup> n (%)<\/td> #>     <\/tr> #>   <\/tfoot> #> <\/table> #> <\/div>"},{"path":"/reference/plot_olr.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest plot from ordinal logistic regression. — plot_olr","title":"Forest plot from ordinal logistic regression. — plot_olr","text":"Heavily inspired https://www.r-bloggers.com/plotting-odds-ratios-aka--forrestplot--ggplot2/","code":""},{"path":"/reference/plot_olr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest plot from ordinal logistic regression. — plot_olr","text":"","code":"plot_olr(   x,   title = NULL,   dec = 3,   lbls = NULL,   hori = \"OR (95 % CI)\",   vert = \"Variables\",   short = FALSE,   input = c(\"model\", \"df\") )"},{"path":"/reference/plot_olr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest plot from ordinal logistic regression. — plot_olr","text":"x input data. title plot title dec decimals labels lbls labels variable names. Careful, right order checked automatically! hori labels horizontal axis (y axis plot rotated) vert labels horizontal axis (x axis plot rotated) short flag half number ticks horizontal axis. input can either \"model\", olr model (polr()), \"df\", data frame three columns , lower CI upper CI.","code":""},{"path":"/reference/plot_olr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest plot from ordinal logistic regression. — plot_olr","text":"gg object","code":""},{"path":"/reference/plot_olr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest plot from ordinal logistic regression. — plot_olr","text":"","code":"iris$ord<-factor(sample(1:3,size=nrow(iris),replace=TRUE),ordered=TRUE) lm <- MASS::polr(ord~., data=iris, Hess=TRUE, method=\"logistic\") plot_olr(lm, input=\"model\") #> Waiting for profiling to be done..."},{"path":"/reference/plot_ord_odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Forrest plot from ordinal logistic regression. — plot_ord_odds","title":"Forrest plot from ordinal logistic regression. — plot_ord_odds","text":"Heavily inspired https://www.r-bloggers.com/plotting-odds-ratios-aka--forrestplot--ggplot2/","code":""},{"path":"/reference/plot_ord_odds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forrest plot from ordinal logistic regression. — plot_ord_odds","text":"","code":"plot_ord_odds(   x,   title = NULL,   dec = 3,   lbls = NULL,   hori = \"OR (95 % CI)\",   vert = \"Variables\",   short = FALSE,   input = c(\"model\", \"df\") )"},{"path":"/reference/plot_ord_odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forrest plot from ordinal logistic regression. — plot_ord_odds","text":"x input data. title plot title dec decimals labels lbls labels variable names. Carefull, right order checked automatically! hori labels horizontal axis (y axis plot rotated) vert labels horizontal axis (x axis plot rotated) short flag half number ticks horizontal axis. input can either \"model\", olr model (polr()), \"df\", dataframe whith three columns , lower CI upper CI.","code":""},{"path":"/reference/plot_ord_odds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forrest plot from ordinal logistic regression. — plot_ord_odds","text":"gg object","code":""},{"path":"/reference/quantile_cut.html","id":null,"dir":"Reference","previous_headings":"","what":"Easy function for splitting numeric variable in quantiles — quantile_cut","title":"Easy function for splitting numeric variable in quantiles — quantile_cut","text":"Using base/stats functions cut() quantile().","code":""},{"path":"/reference/quantile_cut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easy function for splitting numeric variable in quantiles — quantile_cut","text":"","code":"quantile_cut(   x,   groups,   y = NULL,   na.rm = TRUE,   group.names = NULL,   ordered.f = FALSE,   inc.outs = FALSE,   detail.list = FALSE )"},{"path":"/reference/quantile_cut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easy function for splitting numeric variable in quantiles — quantile_cut","text":"x Variable cut. groups Number groups. y alternative vector draw quantile cuts . Limits within x. Default NULL. na.rm Remove NA's. Default TRUE. group.names Names groups split . Default NULL, giving intervals names. ordered.f Set resulting vector ordered. Default FALSE. inc.outs Flag include min(x) max(x) boarders case y!=NULL. detail.list flag include details ","code":""},{"path":"/reference/quantile_cut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easy function for splitting numeric variable in quantiles — quantile_cut","text":"vector list vector details (length 2)","code":""},{"path":"/reference/quantile_cut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easy function for splitting numeric variable in quantiles — quantile_cut","text":"","code":"aa <- as.numeric(sample(1:1000,2000,replace = TRUE)) x <- 1:450 y <- 6:750 summary(quantile_cut(aa,groups=4,detail.list=FALSE)) ## Cuts quartiles #>     [1,249]   (249,485]   (485,746] (746,1e+03]  #>         501         500         499         500"},{"path":"/reference/read_redcap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download REDCap data — read_redcap_data","title":"Download REDCap data — read_redcap_data","text":"Wrapper function using REDCapR::redcap_read REDCapRITS::REDCap_split including clean-. Handles","code":""},{"path":"/reference/read_redcap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download REDCap data — read_redcap_data","text":"","code":"read_redcap_data(   uri,   token,   records = NULL,   fields = NULL,   events = NULL,   forms = NULL,   generics = c(\"record_id\", \"redcap_event_name\", \"redcap_repeat_instrument\",     \"redcap_repeat_instance\") )"},{"path":"/reference/read_redcap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download REDCap data — read_redcap_data","text":"uri REDCap database uri token API token records records download fields fields download events events download forms forms download generics vector auto-generated generic variable names ignore discarding empty rows","code":""},{"path":"/reference/read_redcap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download REDCap data — read_redcap_data","text":"list instruments","code":""},{"path":"/reference/read_redcap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download REDCap data — read_redcap_data","text":"","code":"# Examples will be provided later"},{"path":"/reference/read_redcap_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Download REDCap data — read_redcap_tables","title":"Download REDCap data — read_redcap_tables","text":"Wrapper function using REDCapR::redcap_read REDCapRITS::REDCap_split including clean-. Handles","code":""},{"path":"/reference/read_redcap_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download REDCap data — read_redcap_tables","text":"","code":"read_redcap_tables(   uri,   token,   records = NULL,   fields = NULL,   events = NULL,   forms = NULL,   generics = c(\"record_id\", \"redcap_event_name\", \"redcap_repeat_instrument\",     \"redcap_repeat_instance\") )"},{"path":"/reference/read_redcap_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download REDCap data — read_redcap_tables","text":"uri REDCap database uri token API token records records download fields fields download events events download forms forms download generics vector auto-generated generic variable names ignore discarding empty rows","code":""},{"path":"/reference/read_redcap_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download REDCap data — read_redcap_tables","text":"list instruments","code":""},{"path":"/reference/read_redcap_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download REDCap data — read_redcap_tables","text":"","code":"# Examples will be provided later"},{"path":"/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame with sample data of cognitive testing score — score","title":"Data frame with sample data of cognitive testing score — score","text":"Contains non-identifiable organic trial data five-dimensional cognitive test.","code":""},{"path":"/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame with sample data of cognitive testing score — score","text":"","code":"data(score)"},{"path":"/reference/score.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame with sample data of cognitive testing score — score","text":"data frame 20 rows 26 variables: id id event event a_is domain index score b_is domain b index score c_is domain c index score d_is domain d index score e_is domain e index score i_is total index score a_lo domain lower ci b_lo domain b lower ci c_lo domain c lower ci d_lo domain d lower ci e_lo domain e lower ci i_lo total lower ci a_up domain upper ci b_up domain b upper ci c_up domain c upper ci d_up domain d upper ci e_up domain e upper ci i_up total upper ci a_per domain percentile b_per domain b percentile c_per domain c percentile d_per domain d percentile e_per domain e percentile i_per total percentile","code":""},{"path":"/reference/source_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Source only specific lines from an R file — source_lines","title":"Source only specific lines from an R file — source_lines","text":"Copied gist christophergandrud (https://gist.github.com/christophergandrud/1eb4e095974204b12af9) function really helpfull working eg sst.dk-servers. can load packages, re-write function. short, manage!","code":""},{"path":"/reference/source_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source only specific lines from an R file — source_lines","text":"","code":"source_lines(file, lines, ...)"},{"path":"/reference/source_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source only specific lines from an R file — source_lines","text":"file character string path source file lines numeric vector lines source 'file' ... arguments passed source","code":""},{"path":"/reference/source_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source only specific lines from an R file — source_lines","text":"list","code":""},{"path":"/reference/stRoke-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stRoke: Clinical stroke research toolbox — stRoke-package","title":"stRoke: Clinical stroke research toolbox — stRoke-package","text":"R-toolbox custom functions convenient data management analysis clinical health research teaching. package mainly collected personal use, use beyond encouraged. package migrated functions agdamsbo/daDoctoR-package, new functions added.","code":""},{"path":[]},{"path":"/reference/stRoke-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stRoke: Clinical stroke research toolbox — stRoke-package","text":"Maintainer: Andreas Gammelgaard Damsbo agdamsbo@clin.au.dk (ORCID)","code":""},{"path":"/reference/talos.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame with sample of TALOS data — talos","title":"Data frame with sample of TALOS data — talos","text":"Contains non-identifiable data TALOS trial","code":""},{"path":"/reference/talos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame with sample of TALOS data — talos","text":"","code":"data(talos)"},{"path":"/reference/talos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame with sample of TALOS data — talos","text":"data frame 200 rows 6 variables: rtreat Randomisation mrs_1 Modified Rankin scale score follow-mrs_6 Modified Rankin scale score end study hypertension Known hypertension diabetes Known diabetes civil Cohabitation status","code":""},{"path":"/reference/talos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data frame with sample of TALOS data — talos","text":"https://doi.org/10.1161/STROKEAHA.117.020067/","code":""}]
